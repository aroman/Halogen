// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class Message_Frame_PointDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message_Frame_Point> {
} _Message_Frame_Point_default_instance_;
class Message_FrameDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message_Frame> {
} _Message_Frame_default_instance_;
class MessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message> {
} _Message_default_instance_;

namespace protobuf_message_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Frame_Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Frame_Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Frame_Point, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Frame_Point, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Frame_Point, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Frame_Point, g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Frame_Point, b_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Frame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Frame, points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Frame, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, frames_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Message_Frame_Point)},
  { 11, -1, sizeof(Message_Frame)},
  { 18, -1, sizeof(Message)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_Frame_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_Frame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _Message_Frame_Point_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Message_Frame_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Message_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Message_Frame_Point_default_instance_.DefaultConstruct();
  _Message_Frame_default_instance_.DefaultConstruct();
  _Message_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rmessage.proto\"\267\001\n\007Message\022\036\n\006frames\030\001 "
      "\003(\0132\016.Message.Frame\032\213\001\n\005Frame\022$\n\006points\030"
      "\001 \003(\0132\024.Message.Frame.Point\022\021\n\ttimestamp"
      "\030\002 \001(\002\032I\n\005Point\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n"
      "\001z\030\003 \001(\002\022\t\n\001r\030\004 \001(\r\022\t\n\001g\030\005 \001(\r\022\t\n\001b\030\006 \001("
      "\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 209);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_message_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_Frame_Point::kXFieldNumber;
const int Message_Frame_Point::kYFieldNumber;
const int Message_Frame_Point::kZFieldNumber;
const int Message_Frame_Point::kRFieldNumber;
const int Message_Frame_Point::kGFieldNumber;
const int Message_Frame_Point::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_Frame_Point::Message_Frame_Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.Frame.Point)
}
Message_Frame_Point::Message_Frame_Point(const Message_Frame_Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&x_) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:Message.Frame.Point)
}

void Message_Frame_Point::SharedCtor() {
  ::memset(&x_, 0, reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&x_) + sizeof(b_));
  _cached_size_ = 0;
}

Message_Frame_Point::~Message_Frame_Point() {
  // @@protoc_insertion_point(destructor:Message.Frame.Point)
  SharedDtor();
}

void Message_Frame_Point::SharedDtor() {
}

void Message_Frame_Point::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_Frame_Point::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_Frame_Point& Message_Frame_Point::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message_Frame_Point* Message_Frame_Point::New(::google::protobuf::Arena* arena) const {
  Message_Frame_Point* n = new Message_Frame_Point;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message_Frame_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Frame.Point)
  ::memset(&x_, 0, reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&x_) + sizeof(b_));
}

bool Message_Frame_Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message.Frame.Point)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 r = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 g = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &g_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 b = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message.Frame.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message.Frame.Point)
  return false;
#undef DO_
}

void Message_Frame_Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message.Frame.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // uint32 r = 4;
  if (this->r() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->r(), output);
  }

  // uint32 g = 5;
  if (this->g() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->g(), output);
  }

  // uint32 b = 6;
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->b(), output);
  }

  // @@protoc_insertion_point(serialize_end:Message.Frame.Point)
}

::google::protobuf::uint8* Message_Frame_Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Message.Frame.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // uint32 r = 4;
  if (this->r() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->r(), target);
  }

  // uint32 g = 5;
  if (this->g() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->g(), target);
  }

  // uint32 b = 6;
  if (this->b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->b(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Message.Frame.Point)
  return target;
}

size_t Message_Frame_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Frame.Point)
  size_t total_size = 0;

  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // uint32 r = 4;
  if (this->r() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->r());
  }

  // uint32 g = 5;
  if (this->g() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->g());
  }

  // uint32 b = 6;
  if (this->b() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->b());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_Frame_Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message.Frame.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Frame_Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_Frame_Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message.Frame.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message.Frame.Point)
    MergeFrom(*source);
  }
}

void Message_Frame_Point::MergeFrom(const Message_Frame_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message.Frame.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.r() != 0) {
    set_r(from.r());
  }
  if (from.g() != 0) {
    set_g(from.g());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
}

void Message_Frame_Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message.Frame.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Frame_Point::CopyFrom(const Message_Frame_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Frame.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Frame_Point::IsInitialized() const {
  return true;
}

void Message_Frame_Point::Swap(Message_Frame_Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_Frame_Point::InternalSwap(Message_Frame_Point* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(r_, other->r_);
  std::swap(g_, other->g_);
  std::swap(b_, other->b_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message_Frame_Point::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message_Frame_Point

// float x = 1;
void Message_Frame_Point::clear_x() {
  x_ = 0;
}
float Message_Frame_Point::x() const {
  // @@protoc_insertion_point(field_get:Message.Frame.Point.x)
  return x_;
}
void Message_Frame_Point::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Message.Frame.Point.x)
}

// float y = 2;
void Message_Frame_Point::clear_y() {
  y_ = 0;
}
float Message_Frame_Point::y() const {
  // @@protoc_insertion_point(field_get:Message.Frame.Point.y)
  return y_;
}
void Message_Frame_Point::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Message.Frame.Point.y)
}

// float z = 3;
void Message_Frame_Point::clear_z() {
  z_ = 0;
}
float Message_Frame_Point::z() const {
  // @@protoc_insertion_point(field_get:Message.Frame.Point.z)
  return z_;
}
void Message_Frame_Point::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:Message.Frame.Point.z)
}

// uint32 r = 4;
void Message_Frame_Point::clear_r() {
  r_ = 0u;
}
::google::protobuf::uint32 Message_Frame_Point::r() const {
  // @@protoc_insertion_point(field_get:Message.Frame.Point.r)
  return r_;
}
void Message_Frame_Point::set_r(::google::protobuf::uint32 value) {
  
  r_ = value;
  // @@protoc_insertion_point(field_set:Message.Frame.Point.r)
}

// uint32 g = 5;
void Message_Frame_Point::clear_g() {
  g_ = 0u;
}
::google::protobuf::uint32 Message_Frame_Point::g() const {
  // @@protoc_insertion_point(field_get:Message.Frame.Point.g)
  return g_;
}
void Message_Frame_Point::set_g(::google::protobuf::uint32 value) {
  
  g_ = value;
  // @@protoc_insertion_point(field_set:Message.Frame.Point.g)
}

// uint32 b = 6;
void Message_Frame_Point::clear_b() {
  b_ = 0u;
}
::google::protobuf::uint32 Message_Frame_Point::b() const {
  // @@protoc_insertion_point(field_get:Message.Frame.Point.b)
  return b_;
}
void Message_Frame_Point::set_b(::google::protobuf::uint32 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:Message.Frame.Point.b)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_Frame::kPointsFieldNumber;
const int Message_Frame::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_Frame::Message_Frame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.Frame)
}
Message_Frame::Message_Frame(const Message_Frame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      points_(from.points_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:Message.Frame)
}

void Message_Frame::SharedCtor() {
  timestamp_ = 0;
  _cached_size_ = 0;
}

Message_Frame::~Message_Frame() {
  // @@protoc_insertion_point(destructor:Message.Frame)
  SharedDtor();
}

void Message_Frame::SharedDtor() {
}

void Message_Frame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_Frame::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_Frame& Message_Frame::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message_Frame* Message_Frame::New(::google::protobuf::Arena* arena) const {
  Message_Frame* n = new Message_Frame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message_Frame::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Frame)
  points_.Clear();
  timestamp_ = 0;
}

bool Message_Frame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message.Frame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Message.Frame.Point points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message.Frame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message.Frame)
  return false;
#undef DO_
}

void Message_Frame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message.Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Message.Frame.Point points = 1;
  for (unsigned int i = 0, n = this->points_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->points(i), output);
  }

  // float timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->timestamp(), output);
  }

  // @@protoc_insertion_point(serialize_end:Message.Frame)
}

::google::protobuf::uint8* Message_Frame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Message.Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Message.Frame.Point points = 1;
  for (unsigned int i = 0, n = this->points_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->points(i), deterministic, target);
  }

  // float timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->timestamp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Message.Frame)
  return target;
}

size_t Message_Frame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Frame)
  size_t total_size = 0;

  // repeated .Message.Frame.Point points = 1;
  {
    unsigned int count = this->points_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->points(i));
    }
  }

  // float timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_Frame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message.Frame)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Frame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_Frame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message.Frame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message.Frame)
    MergeFrom(*source);
  }
}

void Message_Frame::MergeFrom(const Message_Frame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message.Frame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void Message_Frame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message.Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Frame::CopyFrom(const Message_Frame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Frame::IsInitialized() const {
  return true;
}

void Message_Frame::Swap(Message_Frame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_Frame::InternalSwap(Message_Frame* other) {
  points_.InternalSwap(&other->points_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message_Frame::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message_Frame

// repeated .Message.Frame.Point points = 1;
int Message_Frame::points_size() const {
  return points_.size();
}
void Message_Frame::clear_points() {
  points_.Clear();
}
const ::Message_Frame_Point& Message_Frame::points(int index) const {
  // @@protoc_insertion_point(field_get:Message.Frame.points)
  return points_.Get(index);
}
::Message_Frame_Point* Message_Frame::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:Message.Frame.points)
  return points_.Mutable(index);
}
::Message_Frame_Point* Message_Frame::add_points() {
  // @@protoc_insertion_point(field_add:Message.Frame.points)
  return points_.Add();
}
::google::protobuf::RepeatedPtrField< ::Message_Frame_Point >*
Message_Frame::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:Message.Frame.points)
  return &points_;
}
const ::google::protobuf::RepeatedPtrField< ::Message_Frame_Point >&
Message_Frame::points() const {
  // @@protoc_insertion_point(field_list:Message.Frame.points)
  return points_;
}

// float timestamp = 2;
void Message_Frame::clear_timestamp() {
  timestamp_ = 0;
}
float Message_Frame::timestamp() const {
  // @@protoc_insertion_point(field_get:Message.Frame.timestamp)
  return timestamp_;
}
void Message_Frame::set_timestamp(float value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Message.Frame.timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message)
}
Message::Message(const Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      frames_(from.frames_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Message)
}

void Message::SharedCtor() {
  _cached_size_ = 0;
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:Message)
  SharedDtor();
}

void Message::SharedDtor() {
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message& Message::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:Message)
  frames_.Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Message.Frame frames = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Message.Frame frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->frames(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Message.Frame frames = 1;
  for (unsigned int i = 0, n = this->frames_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->frames(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message)
  size_t total_size = 0;

  // repeated .Message.Frame frames = 1;
  {
    unsigned int count = this->frames_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frames(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  frames_.MergeFrom(from.frames_);
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  frames_.InternalSwap(&other->frames_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// repeated .Message.Frame frames = 1;
int Message::frames_size() const {
  return frames_.size();
}
void Message::clear_frames() {
  frames_.Clear();
}
const ::Message_Frame& Message::frames(int index) const {
  // @@protoc_insertion_point(field_get:Message.frames)
  return frames_.Get(index);
}
::Message_Frame* Message::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:Message.frames)
  return frames_.Mutable(index);
}
::Message_Frame* Message::add_frames() {
  // @@protoc_insertion_point(field_add:Message.frames)
  return frames_.Add();
}
::google::protobuf::RepeatedPtrField< ::Message_Frame >*
Message::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:Message.frames)
  return &frames_;
}
const ::google::protobuf::RepeatedPtrField< ::Message_Frame >&
Message::frames() const {
  // @@protoc_insertion_point(field_list:Message.frames)
  return frames_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
